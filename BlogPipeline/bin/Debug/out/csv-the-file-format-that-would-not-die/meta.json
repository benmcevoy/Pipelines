{
    "published": "2012-04-22T05:00:00",
    "summary": "CSV the file format that would not die The comma seperated value format is ubiquitous, simple and yet at the same time quite a massive pain to work with.  Convential wisdom states - someone else has already solved this problem, better than you can - don't use regex when the data isn't regular - the \"right\" answer for this problem is probably a lexer/parser To hell with convential wisdom I say, here is my crack at it!  The actual \"parser\" as such I nicked from [here](http://www.blackbeltcoder.com/Articles/files/reading-and-writing-csv-files-in-c), it's not great either, but better than my first five minute attempt at trying to just use string.Split(',') I'm pretty pleased to say I managed to ignore all convential wisdom, squeezing some RegEx, string manipulation and even a little reflection into this home brewed monstrosity. ",
    "keywords": "{, }, =, csv, varied, //",
    "slug": "csv-the-file-format-that-would-not-die",
    "title": "CSV the file format that would not die"
}